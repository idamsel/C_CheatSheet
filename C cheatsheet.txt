History

Founder :-  Dennis Ritchie.
Developed year :- 1972 at Bell Laboratories(U.S.A).
First Implement :- DEC PDP-11 Computer.

Features

High level programming language.
Structure language
Rich library
Extensible
Recursion
Pointers
Faster
Memory management

C Tokens

Keywords :- Those variables which have special meaning and are predefined in C libraries.
 for,if,else,main
Special Symbols :-  Have special built in meaning in the language.
%,&,{},()
Constants :- The values of constants are fixed .
const data_type variable_name;
Types :- Integer, Float,Char,String,Octal and Hex
Identifiers :- User declare in a program in order to name a value,variable,function,array.
int x = 10;
String :- Collection of chars in the form of an array and end with null char.(Described the end of the string)
char string_name[5];
Operators 

Data Types

Basic - int,char,float,double
Derived - array,pointer,structure,union
Enumeration - enum
Void - void

Variables

Reserved memory space which stores a valueof a definite datatype. 
Variables not constants. It allows changes.

Types

Local - Inside a code black or  function and has the scope confined to that particular block of code
void Name(){
String name = "Vaidarbhi";
}
Global - Outside a code block or a function and has the scope across the entirre program and allows any function to change it's value
int global_variable =10;
void val(){
int local_variable = 20;
} 
Static - Variable using static keyword 
void sum(){
static int a = 10;
}
Automatic - Variable using auto keyword
By default all variables known as auto
External - Variable using extern keyword
expternal int external = 10;

 Preprocessor Directives

Lines in a program that begin with the character #
It is a macro processor that is used automatically by the C compiler to transform program before actual compilation

stdio.h (Standard input output)

Pre processor -> Compiler -> Assembler -> Loader/Linker.

#include - Used to paste code of given file into current file.
 	Include system defined and used defined header files.
#define -  	Used to define constant or micro substitution. Use any basic define.
#undef - 	Used to undefined the constant or macro defined by #define.
#ifdef - 	Checks if macro is defined by #define. If yes it executes the code otherwise #else code is execute.
#ifndef -	Checks if macro is not defined by #define.If yes it executes the code otherwise #else code is execute.
#if - 	Evaluate the expression or condition.
#else - 	Evaluate the expression or condition.
#error - 	Indicates error. Fatal error come in program if #error found.
#pragma - 	Provide additional information to the compiler.

Pointers

Variable which stores the address of another variable. This variable can be type int,char,array,function or any other pointer. 
The size of the pointer depends on the architecture.
The pointer in c language can be declared using *(asterick).

int * p = &n;

Escape Sequence

Combination of \ and a letter or digit.

\a -  Alarm.
\b -  Backspace.
\f -   Form Feed.
\n -  New Line.
\r -   Carriage Return.
\t -    Tab Space.
\v -    Vertical Space.

Functions

Subdivided program of a main program enclosed within flower brackets.
Called by the main program to implement its functionality.
Provides Code Reusability and Modularity.

Library Functions.
User - Defined Functions.

How to use ?

Function without arguments and without return value.
Function without arguments and with return value.
Function with arguments and without return value.
Function with arguments and with return value.

Data Structure

Collection of data values, the relationships among them and the functions that are applied on to the data.

Primitive Data Structure. (Built - in)
Abstract Data Structure.(User - defined)

Characteristics

Linear - Stores its elements in an arranged linear sequences. (Array)
Non - linear - Stores its element in nonlinear fashion. (Tree, Graph)
Homogeneous - Stores element that are made same datatype. (Array)
Non - homogeneous - Stores element that are made differet datatype. (Structures)
Static - Size and allocated memory is fixed and can't change during run-time. (Array)
Dynamic - Size and allocated memory is changes during run-time based on program and resource requirements of the program. (Linked List)

Arrays

Collection of similar type of data items stored at contiguous memory locations.

One - Dimensional - Single row and multiple columns. (My Array = new int[5])
Two - Dimensional - Collection of Rows and Columns like Matrices. (Array = new int[2][5])
Multi - Dimensional - Arranged like 3d matrix.

Lists

Linear data structures similar to arrays.

Singly Lined Lists - Nodes contains two fields. (Next -> Present)
Doubly Linked Lists - Nodes contains three fields (Previous -> Node -> Upcoming)
Circular Linked Lists - Similar to Singly Linked List.

Stack 

Linear data structure which follows a particular order in which the operations are performed.
Order may be LIFO or FIFO.

Queue

Similar to the stack but only do operations of FIFO.

Graphs

Represented in agraphical format using nnodes and edges.

Adjacency Matrix.
Adjacency List.

Files

Create File or Open File. (fopen)
Reading from File. (fscanf or fgetc)
Writing to a File. (fprintf or fputs)
Moving a specific location in a File. (fseek,rewind)
Closing a File. (fclose)

Strings

Defined as one - dimensional array of characters terminated by a null character.

Char Array.
String Literal.

strlen()
strcpy()
strcat()
strcmp()
strrev()
strlwr()
strupr()

Structure

Allows to combinig data items of different datatypes togetther.
Structures are used to represent a record.
struct is the keyword used to declare Structure.

struct school
{
     int id;
     string name;
} 

Union

Storing different datatypes in the same memory location.
union is the keyword used to declare Union.

union office
{
   int EmpID;
   string name;
}

Dynamic Memory Allocation

Procedure in which the size of a data structure is changed during the runntime.
malloc() - single large block of memory with the specified size. Returns a pointer of type void.
calloc() - Dynamically allocate the specified number of blocks of memory of the specified type. Initialize with default '0'.
realloc() - Dynamically change the memory allocation of a previously allocated memory.
free() - Dynamically de-allocate the memory. Helps to reduce wastage of memory by freeing it.

Sorting Algorithms

Rearrange a given array or list elements according to a comparison operator on the element.







